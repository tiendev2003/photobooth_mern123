services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    environment:
      - DATABASE_URL=mysql://user:password@mysql:3306/photobooth
      - NODE_ENV=production
      - NEXT_PUBLIC_MAIN_DOMAIN=${MAIN_DOMAIN:-localhost:3000}
      - NEXT_PUBLIC_ADMIN_DOMAIN=${ADMIN_DOMAIN:-admin.localhost:3000}
      - NEXT_PUBLIC_ASSET_PREFIX=${ASSET_PREFIX:-}
      - JWT_SECRET=${JWT_SECRET:-your_strong_secret_key_here}
    volumes:
      - ./public/uploads:/app/public/uploads
    restart: unless-stopped
    networks:
      - photobooth-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - photobooth-network

  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: photobooth
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - photobooth-network

volumes:
  mysql-data:

networks:
  photobooth-network:
    driver: bridge
