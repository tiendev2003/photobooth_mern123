generator client {
  provider = "prisma-client-js"
}

// Model Background - Quản lý các ảnh background cho photobooth
model Background {
  id          String   @id @default(uuid())
  name        String   // Tên background
  url         String   // Đường dẫn ảnh background
  isActive    Boolean  @default(true) // Trạng thái hoạt động
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@index([isActive])
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Store {
  id             String          @id @default(uuid())
  name           String // Tên cửa hàng
  slogan         String? // Slogan của cửa hàng
  logo           String? // Logo cửa hàng
  background     String? // Ảnh background cửa hàng
  description    String? // Mô tả cửa hàng
  address        String? // Địa chỉ cửa hàng
  phone          String? // Số điện thoại cửa hàng
  email          String? // Email cửa hàng
  accountNumber  String? // Số tài khoản cửa hàng
  primaryColor   String? // Màu chủ đạo
  secondaryColor String? // Màu phụ
  isActive       Boolean         @default(true) // Trạng thái hoạt động
  maxEmployees   Int             @default(10) // Giới hạn số nhân viên
  maxAccounts    Int             @default(20) // Giới hạn số tài khoản máy
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  managerId      String // ID của quản lý cửa hàng
  manager        User            @relation("StoreManager", fields: [managerId], references: [id])
  employees      User[]          @relation("StoreEmployees") // Danh sách nhân viên và tài khoản máy
  frameTemplates FrameTemplate[] // Templates riêng của cửa hàng
  coupons        Coupon[] // Mã giảm giá của cửa hàng
  revenues       Revenue[] // Doanh thu của cửa hàng
  pricings       Pricing[] // Pricing của cửa hàng

  @@index([managerId])
}

// Model User - Quản lý thông tin người dùng
model User {
  id               String        @id @default(uuid())
  name             String // Tên người dùng
  username         String        @unique // Username đăng nhập
  email            String? // Email (optional)
  password         String // Mật khẩu
  role             Role          @default(USER) // Vai trò: ADMIN, MANAGER, STORE_OWNER, USER, MACHINE
  phone            String? // Số điện thoại
  address          String? // Địa chỉ
  avatar           String? // Ảnh đại diện
  currentToken     String?       @db.Text // Token hiện tại
  isActive         Boolean       @default(true) // Trạng thái hoạt động
  canDeleteManager Boolean       @default(false) // Quyền xóa/khóa quản lý (chỉ ADMIN)
  machineCode      String? // Mã máy (nếu là tài khoản máy)
  location         String? // Vị trí máy (nếu là tài khoản máy)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  storeId          String? // ID cửa hàng (null nếu là ADMIN)
  store            Store?        @relation("StoreEmployees", fields: [storeId], references: [id])
  managedStores    Store[]       @relation("StoreManager") // Cửa hàng mà user quản lý
  coupons          Coupon[] // Mã giảm giá do user tạo
  revenues         Revenue[] // Doanh thu do user/máy tạo ra
  couponUsages     CouponUsage[] // Lịch sử sử dụng mã giảm giá
  pricings         Pricing[] // các pricing gán cho user này


  @@index([storeId])
  @@index([machineCode])
}

// Model FrameType - Loại frame dùng chung toàn hệ thống
model FrameType {
  id          String          @id @default(uuid())
  name        String          @unique // Tên loại frame
  description String? // Mô tả
  image       String? // Ảnh minh họa
  columns     Int // Số cột
  rows        Int // Số hàng
  totalImages Int // Tổng số ảnh
  isActive    Boolean         @default(true) // Trạng thái hoạt động
  isHot       Boolean         @default(false) // Là hot template
  isCustom    Boolean         @default(false) // Là template tùy chỉnh
  isCircle    Boolean         @default(false) // Là frame hình tròn
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  templates   FrameTemplate[] // Danh sách template thuộc loại này
}

// Model FrameTemplate - Quản lý frame template
model FrameTemplate {
  id          String    @id @default(uuid())
  name        String // Tên template
  filename    String    @unique // Tên file
  background  String // Background image
  overlay     String // Overlay image
  frameTypeId String // ID loại frame
  storeId     String? // ID cửa hàng sở hữu template (null nếu là global)
  position    Int       @default(0) // Vị trí hiển thị trong danh sách
  isActive    Boolean   @default(true) // Trạng thái hoạt động
  isGlobal    Boolean   @default(false) // Template toàn cục
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  frameType   FrameType @relation(fields: [frameTypeId], references: [id], onDelete: Cascade)
  store       Store?    @relation(fields: [storeId], references: [id])

  @@index([frameTypeId])
  @@index([storeId])
  @@index([position])
}

// Model Image - Quản lý file ảnh/video
model Image {
  id        String        @id @default(uuid())
  filename  String        @unique // Tên file
  path      String // Đường dẫn file
  fileType  FileType      @default(IMAGE) // Loại file: IMAGE, GIF, VIDEO
  size      Int? // Kích thước file
  duration  Int? // Thời lượng (cho video)
  sessionId String? // ID phiên media
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  session   MediaSession? @relation(fields: [sessionId], references: [id])

  @@index([sessionId])
}

// Model MediaSession - Quản lý phiên chụp ảnh và QR code
model MediaSession {
  id          String             @id @default(uuid())
  sessionCode String             @unique // Mã phiên để truy cập
  imageUrl    String? // URL ảnh đã upload
  videoUrl    String? // URL video đã upload
  gifUrl      String? // URL GIF đã upload
  images      Image[] // Danh sách media trong phiên (legacy)
  status      MediaSessionStatus @default(PROCESSING) // Trạng thái xử lý
  storeId     String? // ID cửa hàng
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  expiresAt   DateTime // Thời gian hết hạn phiên

  @@index([sessionCode])
  @@index([expiresAt])
  @@index([storeId])
}

// Enum MediaSessionStatus - Trạng thái session
enum MediaSessionStatus {
  PROCESSING // Đang xử lý
  COMPLETED // Hoàn thành
  EXPIRED // Đã hết hạn
}

model Pricing {
  id              String   @id @default(uuid())
  name            String   @unique
  priceOnePhoto   Float
  priceTwoPhoto   Float
  priceThreePhoto Float
  isActive        Boolean  @default(true)
  isDefault       Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  userId  String?
  storeId String?

  user  User?  @relation(fields: [userId], references: [id])
  store Store? @relation(fields: [storeId], references: [id])
  revenues Revenue[] // Doanh thu sử dụng bảng giá này

  @@index([userId])
  @@index([storeId])
  @@index([isActive])
  @@index([isDefault])
}

// Model Coupon - Quản lý mã giảm giá
model Coupon {
  id           String        @id @default(uuid())
  code         String        @unique // Mã giảm giá
  discount     Float // Mức giảm giá 
  expiresAt    DateTime      @map("expires_at") // Ngày hết hạn (tự động 1 ngày)
  userId       String?       @map("user_id") // ID người dùng tạo (optional)
  storeId      String? // ID cửa hàng (null nếu global)
  isActive     Boolean       @default(true) // Trạng thái hoạt động
  usageLimit   Int? // Giới hạn sử dụng
  currentUsage Int           @default(0) // Số lần đã sử dụng
  isStoreOnly  Boolean       @default(true) // Chỉ áp dụng cho tài khoản cửa hàng
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User?         @relation(fields: [userId], references: [id])
  store        Store?        @relation(fields: [storeId], references: [id])
  revenues     Revenue[] // Doanh thu sử dụng mã giảm giá
  couponUsages CouponUsage[] // Lịch sử sử dụng mã giảm giá

  @@index([userId])
  @@index([storeId])
  @@index([code])
  @@index([expiresAt])
}

// Model CouponUsage - Lịch sử sử dụng mã giảm giá
model CouponUsage {
  id        String   @id @default(uuid())
  couponId  String // ID mã giảm giá
  userId    String // ID user/máy sử dụng
  revenueId String // ID doanh thu liên quan
  usedAt    DateTime @default(now())
  coupon    Coupon   @relation(fields: [couponId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  revenue   Revenue  @relation(fields: [revenueId], references: [id])

  @@index([couponId])
  @@index([userId])
  @@index([revenueId])
}

// Model Revenue - Quản lý doanh thu
model Revenue {
  id             String        @id @default(uuid())
  amount         Float // Số tiền
  description    String? // Mô tả giao dịch
  userId         String // ID user/máy tạo doanh thu
  storeId        String // ID cửa hàng
  couponId       String? // ID mã giảm giá được sử dụng (optional)
  pricingId      String? // ID bảng giá được sử dụng (optional)
  originalAmount Float? // Số tiền gốc trước khi giảm giá
  discountAmount Float? // Số tiền được giảm
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  user           User          @relation(fields: [userId], references: [id])
  store          Store         @relation(fields: [storeId], references: [id])
  coupon         Coupon?       @relation(fields: [couponId], references: [id])
  pricing        Pricing?      @relation(fields: [pricingId], references: [id])
  couponUsages   CouponUsage[] // Lịch sử sử dụng mã giảm giá

  @@index([userId])
  @@index([storeId])
  @@index([couponId])
  @@index([pricingId])
  @@index([createdAt])
}

// Enum FileType - Loại file media
enum FileType {
  IMAGE
  GIF
  VIDEO
}

// Enum Role - Vai trò người dùng
enum Role {
  ADMIN // Admin cấp cao - toàn quyền hệ thống
  MANAGER // Quản lý cấp cao - nhân viên của admin
  STORE_OWNER // Chủ cửa hàng - quản lý cửa hàng riêng
  USER // Nhân viên cửa hàng - chỉ thao tác cơ bản
  MACHINE // Tài khoản máy chụp ảnh - chỉ tạo doanh thu
  KETOAN // Kế toán (nếu cần)
}
